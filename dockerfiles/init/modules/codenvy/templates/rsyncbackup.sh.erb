#!/bin/bash

SSH_KEY=/opt/codenvy-data/conf/ssh/key.pem

SRC_FOLDER=${1}
SRC_HOST=${2}
SRC_PORT=${3}
DST_FOLDER=${4}
REMOVE_ON_SUCCESS=${5=false}
SRC_USER_NAME=${6}

# ensure existing trailing slash to overwrite permissions of destination folder too
if [[ ${SRC_FOLDER} != */ ]]; then
   SRC_FOLDER=${SRC_FOLDER}"/"
fi
if [[ ${DST_FOLDER} != */ ]]; then
   DST_FOLDER=${DST_FOLDER}"/"
fi

# ensure ssh key has correct permissions
if [[ ! -f /opt/rsync_key ]]; then
    cp $SSH_KEY /opt/rsync_key
fi
if [[ $(stat -c %a /opt/rsync_key) != 600 ]]; then
    chmod 0600 /opt/rsync_key
fi

RSYNC_BACKUP_BWLIMIT=<%= scope.lookupvar('codenvy::rsync_backup_bwlimit') %>
SSH_LOG_LEVEL=<%= scope.lookupvar('codenvy::rsync_ssh_log_level') %>
SSH_OPTIONS="-i /opt/rsync_key -l ${SRC_USER_NAME} -o StrictHostKeyChecking=no -o PasswordAuthentication=no -o LogLevel=${SSH_LOG_LEVEL} -p ${SRC_PORT}"

RSYNC_COMMAND=$(ssh ${SSH_OPTIONS} ${SRC_HOST} \
            "if hash sudo 2>/dev/null;then echo 'sudo rsync';else echo 'rsync';fi")

rsync --quiet --delete --partial --links --safe-links --recursive --times --human-readable --bwlimit=${RSYNC_BACKUP_BWLIMIT} --executability \
              --include='.codenvy/' \
              --filter=':- .gitignore' \
              --rsh="ssh ${SSH_OPTIONS}" \
              --rsync-path="${RSYNC_COMMAND}" \
              ${SRC_HOST}:${SRC_FOLDER} ${DST_FOLDER}
